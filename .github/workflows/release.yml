env:
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PROVIDER: policy
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  VERSION: ${{ github.event.client_payload.ref }}
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv pip requests wheel urllib3 chardet
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.2.0
        with:
          repo: pulumi/pulumictl
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.13.0
      - name: Ensure
        run: |
          make ensure
      - name: Lint Node
        run: |
          cd sdk/nodejs/policy && make lint
      - name: Lint Python
        run: |
          cd sdk/python && make lint
  build_test_publish:
    name: Build, Test, and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv pip requests wheel urllib3 chardet twine
      - name: Ensure dependencies
        run: make ensure
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Build SDK
        run: make only_build
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Run Unit Tests
        run: make only_test_fast
      - name: Run Integration Tests
        run: make test_all
      - name: Publish
        run: make publish_packages
      - name: Trigger Docs Build
        run: |
          ./ci-scripts/ci/build-package-docs.sh "policy"
        env:
          TRAVIS: true
          PULUMI_BOT_GITHUB_API_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
          TRAVIS_TAG: ${{ env.VERSION }}
    strategy:
      fail-fast: true
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.18.x ]
        python-version: [ 3.9.x ]
        node-version: [ 14.x ]
  create_docs_build:
    name: Create docs build
    needs: build_test_publish
    runs-on: ubuntu-latest
    steps:
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - env:
          GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
        name: Dispatch event
        run: pulumictl create docs-build pulumi-${{ env.PROVIDER }} ${GITHUB_REF#refs/tags/}
name: release
"on":
  push:
    tags:
      - v*.*.*
