permissions: write-all # Equivalent to default permissions plus id-token: write
env:
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  PROVIDER: policy
  PULUMI_API: https://api.pulumi-staging.io
  PYPI_USERNAME: __token__
  VERSION: ${{ github.event.client_payload.ref }}
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_OIDC_ORGANIZATION: pulumi
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: imports/github-secrets
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: NODE_AUTH_TOKEN=NPM_TOKEN,NPM_TOKEN,PULUMI_ACCESS_TOKEN=PULUMI_ACCESS_TOKEN_STAGING,SLACK_WEBHOOK_URL,PYPI_PASSWORD=PYPI_API_TOKEN
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv pip requests wheel urllib3 chardet
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      - name: Ensure
        run: |
          make ensure
      - name: Lint Node
        run: |
          cd sdk/nodejs/policy && make lint
      - name: Lint Python
        run: |
          cd sdk/python && make lint
    strategy:
      fail-fast: true
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.25.x ]
        python-version: [ 3.9.x ]
        node-version: [ 20.x ]
  build_test_publish:
    name: Build, Test, and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/actions@v6
        with:
          pulumi-version: dev
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv pip requests wheel urllib3 chardet twine
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      - name: Ensure dependencies
        run: make ensure
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ steps.esc-secrets.outputs.AWS_CI_ROLE_ARN }}
      - name: Build SDK
        run: make only_build
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Run Unit Tests
        run: make only_test_fast
      - name: Run Integration Tests
        run: make test_all
      - name: Publish
        run: make publish_packages
      - name: Trigger Docs Build
        run: |
          ./ci-scripts/ci/build-package-docs.sh "policy"
        env:
          TRAVIS: true
          PULUMI_BOT_GITHUB_API_TOKEN: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}
          TRAVIS_TAG: ${{ env.VERSION }}
    strategy:
      fail-fast: true
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.25.x ]
        python-version: [ 3.9.x ]
        node-version: [ 20.x ]
name: main
"on":
  push:
    branches:
      - main
    paths-ignore:
      - CHANGELOG.md
    tags-ignore:
      - v*
      - sdk/*
      - '**'
