env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PROVIDER: policy
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
jobs:
  comment-notification:
    # We only care about adding the result to the PR if it's a repository_dispatch event
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID >> "$GITHUB_OUTPUT"
      - name: Update with Result
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Please view the PR build - ${{ steps.vars.outputs.run-url }}
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv pip requests wheel urllib3 chardet
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.13.0
      - name: Ensure
        run: |
          make ensure
      - name: Lint Node
        run: |
          cd sdk/nodejs/policy && make lint
      - name: Lint Python
        run: |
          cd sdk/python && make lint
    strategy:
      fail-fast: true
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.21.x ]
        python-version: [ 3.9.x ]
        node-version: [ 18.x ]
  build_and_test:
    name: Build and Test SDK
    runs-on: ${{ matrix.platform }}
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.PR_COMMIT_SHA }}
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.5.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/actions@v4
        with:
          pulumi-version: ">=3.88.0"
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          registry-url: https://registry.npmjs.org
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv pip requests wheel urllib3 chardet
      - name: Ensure dependencies
        run: make ensure
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Build SDK
        run: make only_build
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Run Unit Tests
        run: make only_test_fast
      - name: Run Integration Tests
        run: make test_all
    strategy:
      fail-fast: true
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.21.x ]
        python-version: [ 3.9.x ]
        node-version: [ 18.x ]
name: Run Acceptance Tests from PR
on:
  repository_dispatch:
    types: [run-acceptance-tests-command]
  pull_request:
    branches:
      - master
